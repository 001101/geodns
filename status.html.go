// +build !devel

package main

import (
	"bytes"
	"compress/gzip"
	"io"
)

// status_html returns raw, uncompressed file data.
func status_html() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0xb4,0x56,
0xcf,0x6f,0xda,0x30,0x14,0x3e,0xc3,0x5f,0x61,0x45,0xea,0x6d,
0x75,0x4a,0x37,0xa4,0xb1,0x85,0x9c,0x5a,0x75,0x17,0xaa,0xb6,
0x68,0x3b,0xec,0x66,0xe2,0x07,0xb1,0x16,0x6c,0x64,0xbf,0x96,
0x76,0x51,0xff,0xf7,0xd9,0xf9,0x45,0x80,0xc0,0xc0,0xd3,0x2e,
0x89,0xf3,0xd9,0x9f,0xde,0x7b,0xdf,0xe7,0xf8,0x39,0x4a,0x71,
0x99,0xc5,0x51,0x0a,0x8c,0xc7,0x11,0x0a,0xcc,0x20,0xbe,0x03,
0x75,0x73,0x3f,0x25,0x79,0x4e,0xe8,0x0f,0xd0,0x46,0x28,0x49,
0xde,0xdf,0xa3,0xb0,0x9c,0xec,0x47,0x99,0x90,0xbf,0x48,0xaa,
0x61,0x3e,0x0e,0xc2,0x50,0x02,0x72,0xc9,0xe8,0x4c,0x29,0x34,
0xa8,0xd9,0x2a,0xe1,0x92,0x26,0x6a,0x19,0xe2,0x5a,0x20,0x82,
0xbe,0x6c,0x26,0xc2,0x6b,0xfa,0x91,0x0e,0xc2,0xc4,0x98,0xb0,
0xc1,0x2e,0xed,0xca,0x99,0x90,0xc0,0xe9,0x52,0x58,0x9a,0x31,
0x01,0xd1,0x90,0x8d,0x03,0x83,0x6f,0x19,0x98,0x14,0x00,0x83,
0x53,0xe3,0x15,0xc0,0x9a,0x61,0x92,0xd6,0x81,0x40,0x3f,0x67,
0xc0,0xe4,0x26,0xda,0xd1,0x20,0xc5,0x57,0xdc,0xef,0x21,0xa7,
0xbf,0x95,0x04,0xc9,0x96,0xf0,0xc1,0x8e,0x9d,0x2c,0xa0,0x49,
0x4e,0xe6,0x4a,0xe2,0xe5,0x1a,0xc4,0x22,0xc5,0x2f,0x64,0xa6,
0x32,0xfe,0x95,0xbc,0xf7,0xa3,0xb0,0xa2,0x45,0x33,0xc5,0xdf,
0xe2,0x7e,0x3f,0xe2,0xe2,0x85,0x24,0x19,0x33,0x66,0x1c,0x24,
0x96,0xc1,0x6c,0x71,0x3a,0x70,0x13,0xe9,0x20,0xbe,0xcb,0xd4,
0x8c,0x65,0x51,0x68,0x87,0xdb,0x2b,0xb5,0x5a,0xbb,0x35,0xbd,
0x36,0x66,0x56,0x4c,0x7e,0x2e,0xd0,0x5e,0x84,0x6c,0x96,0x41,
0x3d,0x51,0x7e,0x14,0x4f,0x2b,0xae,0xb6,0xd9,0x01,0xaf,0x3e,
0x6d,0x44,0x0e,0xd2,0x00,0xb7,0xbc,0x9e,0xe3,0xe9,0xe2,0x6d,
0x07,0xbc,0x66,0x0b,0x39,0x57,0xa4,0x2c,0x2a,0xa8,0x12,0x22,
0x06,0x19,0x1a,0x6b,0x2f,0x6f,0x56,0xc7,0x03,0x62,0xb5,0xda,
0x86,0x86,0xfb,0xd0,0xa0,0x03,0x9b,0x58,0xc9,0x1b,0xc4,0x0e,
0x74,0x51,0xc2,0x56,0x2e,0xf1,0xe3,0x33,0x68,0x01,0x3b,0x21,
0xf3,0x7c,0xa5,0x85,0xc4,0x39,0x09,0x2e,0xe8,0xf5,0x3c,0x20,
0xb4,0xcc,0x8e,0x56,0x8b,0xe9,0x13,0x43,0x18,0x14,0xdb,0xf0,
0x4c,0xd2,0xd0,0x87,0x34,0xf0,0x62,0xb9,0xe2,0x5b,0xbc,0xb2,
0xfc,0xe2,0xed,0xfc,0xf9,0xbf,0x66,0x7e,0x13,0x06,0xd5,0x42,
0xb3,0xe5,0x8e,0xae,0x93,0xa3,0x0e,0x15,0xc8,0xe8,0xea,0x62,
0x07,0x18,0xed,0x01,0x74,0x17,0x9a,0xb0,0xd7,0x6d,0x60,0x8a,
0xfc,0x06,0x5e,0xfe,0xe6,0xfd,0x54,0xc8,0x04,0xdc,0x96,0xd3,
0x78,0x50,0x5f,0x1e,0x10,0xd2,0xe8,0xdb,0xd4,0x45,0x6d,0x25,
0xa7,0x9a,0xd2,0x22,0x6d,0x5b,0x72,0x22,0xeb,0x21,0xc1,0xd1,
0x15,0xf1,0xe3,0x8d,0x7c,0x79,0x47,0x89,0x87,0x34,0x61,0xaf,
0xe7,0x47,0x2b,0x9d,0x22,0x7b,0x3b,0x75,0xcf,0xac,0x27,0x48,
0x40,0x9e,0xeb,0x53,0x49,0xf2,0x72,0xab,0xa6,0xfa,0x78,0x56,
0x71,0x3d,0x9d,0x6b,0xb1,0x3d,0xfc,0x6b,0xb3,0x3d,0x5c,0xac,
0xcb,0xf6,0xf0,0xb2,0xa2,0x1e,0x71,0xb4,0x75,0xf8,0x44,0xa1,
0x6d,0x30,0x5d,0x8d,0xe6,0xd3,0x3f,0x35,0x9a,0x7a,0xcb,0x1c,
0x3a,0x99,0xbe,0xaf,0x50,0x2c,0xa1,0xc8,0xac,0xac,0x89,0x96,
0x08,0xbd,0x61,0x6f,0x53,0xb4,0xf5,0x2d,0xea,0xbc,0xfb,0x9d,
0x67,0x66,0x9d,0x76,0xf3,0xb6,0x0d,0xf4,0xa7,0xed,0xd1,0xa6,
0x6c,0xa5,0x5e,0x59,0x17,0x39,0x47,0x98,0xc6,0x36,0x4e,0x5a,
0x8e,0x8a,0x9e,0xf7,0x8c,0xb0,0x41,0x86,0x15,0x62,0x5a,0x8b,
0x3a,0x30,0xb7,0x5d,0xc9,0xe3,0xc3,0xb4,0x42,0x4a,0xe1,0xf3,
0x5c,0x33,0xb9,0x00,0xeb,0x76,0x91,0xaa,0xb5,0xc6,0x55,0x82,
0xba,0xad,0x50,0xa5,0x9e,0x55,0x4d,0x65,0xce,0x86,0xf1,0xb0,
0x9e,0xad,0xaf,0x20,0x81,0x53,0xeb,0xde,0x0e,0x1a,0x67,0x6b,
0x5f,0x2b,0xd1,0x3b,0xda,0x69,0xe7,0xbe,0x99,0x80,0x15,0x3a,
0x31,0x87,0xba,0xe9,0xc9,0x9c,0xa1,0x07,0x67,0xe0,0x43,0xda,
0x3a,0x03,0x3a,0x8a,0xbe,0x75,0x37,0xd4,0x73,0x2a,0xbf,0xe5,
0xd2,0xf8,0x54,0xbf,0xcb,0x3b,0xb5,0x98,0xbd,0x78,0xbe,0xc4,
0x2e,0x25,0xf2,0x1c,0x24,0x77,0x5b,0x6a,0xf3,0x9b,0x6c,0xfe,
0x92,0xf2,0x2e,0x6a,0x7f,0x0e,0x77,0xb1,0xef,0xff,0x09,0x00,
0x00,0xff,0xff,0x48,0x16,0xe4,0x27,0xe0,0x0b,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}